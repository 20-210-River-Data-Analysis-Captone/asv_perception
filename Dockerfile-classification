# based on https://github.com/johannestang/yolo_service/blob/master/Dockerfile
# Define base images
ARG build_image="ros:melodic-perception-bionic"
ARG app_image="ros:melodic-perception-bionic"

# Build image
FROM ${build_image} AS build
RUN apt-get update
RUN apt-get install -y build-essential git

# Should CUDA be enabled?
ARG cuda=0
# Compile with support for Tensor Cores?
ARG cuda_tc=0

# Get and compile darknet
WORKDIR /src
RUN git clone -n https://github.com/AlexeyAB/darknet.git
WORKDIR /src/darknet
RUN git checkout 4c315ea26b56c2bf20ebc240d94386c6e3cc83db
RUN sed -i -e "s!OPENMP=0!OPENMP=1!g" Makefile && \
    sed -i -e "s!AVX=0!AVX=1!g" Makefile && \
    sed -i -e "s!LIBSO=0!LIBSO=1!g" Makefile && \
    sed -i -e "s!GPU=0!GPU=${cuda}!g" Makefile && \
    sed -i -e "s!CUDNN=0!CUDNN=${cuda}!g" Makefile && \
    sed -i -e "s!CUDNN_HALF=0!CUDNN_HALF=${cuda_tc}!g" Makefile && \
    make

# App image:
FROM ${app_image}

ARG CATKIN_WS="/catkin_ws"
ENV CATKIN_WS=${CATKIN_WS}

WORKDIR ${CATKIN_WS}

# startup script
COPY classification/run.sh .
CMD [ "sh", "-c", "${CATKIN_WS}/run.sh"]

# common python scripts
ENV PYTHONPATH "${PYTHONPATH}:${CATKIN_WS}/src/asv_perception_common/src"

# for finding libdarknet.so
ENV LD_LIBRARY_PATH "${LD_LIBRARY_PATH}:/usr/lib/"

# Model to use, place files in 'data' directory
#  must also update path to names in coco.data
ARG weights_file="${CATKIN_WS}/data/yolov3.weights"
ARG config_file="${CATKIN_WS}/data/yolov3.cfg"
ARG meta_file="${CATKIN_WS}/data/coco.data"
ENV weights_file=${weights_file}
ENV config_file=${config_file}
ENV meta_file=${meta_file}

# Copy data folder, copy darknet files from build image
COPY classification/data data/
#COPY --from=build /src/darknet/cfg ${CATKIN_WS}/darknet-cfg
#COPY --from=build /src/darknet/data data/
COPY --from=build /src/darknet/libdarknet.so /usr/lib

# Install app
COPY common src
COPY classification src

# todo:  system update
#    apt-get -y upgrade && \
#    apt-get update && \
#    apt-get clean && \
#    rm -rf /var/lib/apt/lists/* && \
RUN export DEBIAN_FRONTEND=noninteractive && \
    chmod +x run.sh && \
    . /opt/ros/${ROS_DISTRO}/setup.sh && \
    catkin_make