<launch>

  <arg name="package_name" value="asv_perception_obstacleid"/>
  <arg name="lidar_topic" />

  <arg name="nodelet_name" value="$(arg package_name)_nodelet" />
  <node pkg="nodelet" type="nodelet" name="$(arg nodelet_name)" args="manager" respawn="true" />

  <!-- self-return filter -->
  <node pkg="nodelet" type="nodelet" name="distance_filter" respawn="true" output="screen"
    args="load $(arg package_name)/PointCloudFilterNodelet $(arg nodelet_name)" >
  
    <remap from="~input" to="$(arg lidar_topic)" />

    <rosparam>
      min_distance: 6.
    </rosparam>
  </node>

  <!-- voxel grid, transform points to fixed frame.  
    TODO:  are Z axis of points being corrupted?  Not sure pcl_ros is properly handling PointXYZIR 
  -->
  <node pkg="nodelet" type="nodelet" name="grid_filter" respawn="true" output="screen" 
    args="load pcl/VoxelGrid $(arg nodelet_name)" >
  
    <remap from="~input" to="distance_filter/output" /> <!-- remap from=sink to=source -->

    <rosparam>
      leaf_size: 0.1
      output_frame:  'odom'
    </rosparam>
  </node>

  <!-- 
    land mass/cluster filter:  filter out points which can be clustered into areas larger than cluster_area_max  
  -->
  <node pkg="nodelet" type="nodelet" name="cluster_filter" respawn="true" output="screen"
    args="load $(arg package_name)/PointCloudFilterNodelet $(arg nodelet_name)"
  >
    <remap from="~input" to="grid_filter/output" />

    <rosparam>
      cluster_inliers: true
      cluster_tolerance: 20.
      cluster_size_min: 3
      cluster_area_max:  1000
    </rosparam>
  </node>

  <!-- cluster extraction to obstacles -->
  <node pkg="nodelet" type="nodelet" name="extraction" respawn="true" output="screen"
    args="load $(arg package_name)/ObstacleExtractionNodelet $(arg nodelet_name)" >

    <remap from="~input" to="cluster_filter/output" />
    
    <rosparam>
      cluster_tolerance: 5.
      cluster_size_min: 3
      cluster_area_max: 1500
    </rosparam>
  </node>

</launch>
