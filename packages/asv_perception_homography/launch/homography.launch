<?xml version="1.0" encoding="utf-8"?>
<launch>
    <arg name="package_name" value="asv_perception_homography"/>
    <arg name="node_name" default="homography"/>
    
    <arg name="imu_topic" />
    <arg name="radar_topic" />
    <arg name="camera0_image_topic" />
    <arg name="camera0_calibration_file" />
    <arg name="camera1_image_topic" />
    <arg name="camera1_calibration_file" />
    <arg name="camera2_image_topic" />
    <arg name="camera2_calibration_file" />

    <!-- camera0 -->
    <include file="$(find asv_perception_homography)/launch/camera.launch" ns="camera0">
        <arg name="image_topic" value="$(arg camera0_image_topic)" />
        <arg name="imu_topic" value="$(arg imu_topic)" />
        <arg name="radar_topic" value="/homography/radar_image/output" />
        <arg name="calibration_file" default="$(arg camera0_calibration_file)" />
    </include>

    <!-- camera1 -->
    <include file="$(find asv_perception_homography)/launch/camera.launch" ns="camera1">
        <arg name="image_topic" value="$(arg camera1_image_topic)" />
        <arg name="imu_topic" value="$(arg imu_topic)" />
        <arg name="radar_topic" value="/homography/radar_image/output" />
        <arg name="calibration_file" default="$(arg camera1_calibration_file)" />
    </include>

    <!-- camera2 -->
    <include file="$(find asv_perception_homography)/launch/camera.launch" ns="camera2">
        <arg name="image_topic" value="$(arg camera2_image_topic)" />
        <arg name="imu_topic" value="$(arg imu_topic)" />
        <arg name="radar_topic" value="/homography/radar_image/output" />
        <arg name="calibration_file" default="$(arg camera2_calibration_file)" />
    </include>

    <group ns="homography">
        <!-- create radar image from pointcloud -->
        <arg name="nodelet_name" value="$(arg package_name)_nodelet" />
        <node pkg="nodelet" type="nodelet" name="$(arg nodelet_name)" args="manager" respawn="true" />

        <!-- generate radar pointcloud -->
        <node pkg="nodelet" type="nodelet" name="radar_pointcloud" args="load asv_perception_obstacleid/RadarToPointCloudNodelet $(arg nodelet_name)" output="screen">

            <remap from="~input" to="$(arg radar_topic)" />

            <rosparam>
                angle_offset: -270.0
                frame_id:  'base_link'
            </rosparam>
        </node>

        <!-- create image from pointcloud for homography -->
        <node name="radar_image" pkg="$(arg package_name)" type="imager.py" output="screen">
            <remap from="~input" to="radar_pointcloud/full_current" />
            <rosparam>
                max_range: 500
                image_size: 1024
            </rosparam>
        </node>
    </group>

</launch>

