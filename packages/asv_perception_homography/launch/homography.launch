<?xml version="1.0" encoding="utf-8"?>
<launch>
    <arg name="pkg_name" value="asv_perception_homography"/>
    <arg name="node_name" default="homography"/>

    <group ns="left_camera">

        <arg name="homography_calibration_file" default="$(find asv_perception_homography)/launch/calib_left_camera_homography.yaml" />

        <!-- 
            Node to publish homography matrices between rgb, radar, and robot frames
            Subscriptions: 
                - ~imu:             [sensor_msgs/Imu] IMU data, east-north-up
                - ~refresh:         [sensor_msgs/Empty]
            Publications:
                - ~rgb_radar:       [asv_perception_common/Homography] Homography from rgb image to radar
                - ~radar_world:     [asv_perception_common/Homography] Homography from radar to world units (robot frame)
                - ~rgb_world:       [asv_perception_common/Homography] Homography from rgb image to world units (robot frame)
        -->
        <node name="$(arg node_name)" pkg="$(arg pkg_name)" type="homography_node.py" required="true" output="screen">

            <remap from="~imu" to="/imu/data/enu" />

            <rosparam>
                <!-- frame ids for homography msgs -->
                rgb_frame_id: "left_camera"
                radar_frame_id: "radar_1"
                robot_frame_id: "base_link"

                <!-- radar to rgb homography parameter defaults -->
                <!-- 1280 x 1024 -->
                roll: -2.96
                pitch: 80.29
                yaw_: 8.19
                yaw: 0.
                fovy: 46.3
                tx: 2.5
                ty: 6.2
                tz: -4.4

                radar_img_w: 1024

                <!-- radar img diameter equals how many world units (eg meters) -->
                <!-- sailboats.bag:  r=195 -->
                radar_world_units: 390.
            </rosparam>

            <rosparam file="$(arg homography_calibration_file)" />

        </node>

        <!-- 
            Node to visualize alignment between rgb and radar images
            Subscriptions: 
                - ~rgb:                   [sensor_msgs/CompressedImage] Image from rgb camera
                - ~radar:                 [sensor_msgs/Image] Image from radar
                - ~rgb_radar:             [asv_perception_common/HomographyStamped] Homography from rgb image to radar
                - ~imu:                   [sensor_msgs/Imu] IMU data, East-North-Up
            Publications:
                - ~image:                 [sensor_msgs/Image] Image which visualizes homography between rgb image and radar
        -->
        <node name="$(arg node_name)_vis" pkg="$(arg pkg_name)" type="homography_vis_node.py" required="false" output="screen">

            <!-- remap from=sink to=source -->
            <remap from="~imu" to="/imu/data/enu" />
            <remap from="~rgb" to="image_color/compressed" />
            <remap from="~radar" to="/broadband_radar/channel_1/image_raw" />
            <remap from="~rgb_radar" to="$(arg node_name)/rgb_radar" />
        </node>

    </group>
    
</launch>

