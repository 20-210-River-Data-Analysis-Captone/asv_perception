<?xml version="1.0" encoding="utf-8"?>
<launch>
    <arg name="pkg_name" value="asv_perception_homography"/>
    <arg name="node_name" default="homography"/>

    <group ns="left_camera">

        <!-- 
            Node to publish rgb-radar homography matrix (TODO:  adjust w/ IMU data) 
            Subscriptions: 
                - ~imu:             [sensor_msgs/Imu] IMU data (TODO)
            Publications:
                - ~rgb_radar:       [asv_perception_common/Homography] Homography from rgb image to radar
                - ~radar_world:     [asv_perception_common/Homography] Homography from radar to world units
                - ~rgb_world:       [asv_perception_common/Homography] Homography from rgb image to world units
        -->
        <node name="$(arg node_name)" pkg="$(arg pkg_name)" type="homography_node.py" required="true" output="screen">

            <remap from="~imu" to="/imu/data/enu" />

            <rosparam>
                <!-- parent and child frame ids for homography  ( parent/from -> child/to ) -->
                frame_id: "left_camera"
                child_frame_id: "radar_1"

                <!-- 
                    RADAR to rgb alignment parameter values.  Values generated from output of calibrate.py
                    Values are specific to radar and rgb image shape
                -->

                <!-- 1024 x 768 -->
                <!-- 
                roll: -3.0
                pitch: 76.02
                yaw: 0
                fovy: 46.3
                tx: 2.5
                ty: 4.1
                tz: -4.4
                radar_img_w: 1024
                -->
                
                <!-- 1280 x 1024 -->
                roll: -2.96
                pitch: 80.29
                yaw: 8.19
                fovy: 46.3
                tx: 2.5
                ty: 6.2
                tz: -4.4
                radar_img_w: 1024

                <!-- radar img diameter equals how many world units (eg meters) -->
                radar_world_units: 220.

            </rosparam>

        </node>

        <!-- 
            Node to visualize alignment between rgb and radar images
            Subscriptions: 
                - ~rgb:                   [sensor_msgs/CompressedImage] Image from rgb camera
                - ~radar:                 [sensor_msgs/Image] Image from radar
                - ~rgb_radar:             [asv_perception_common/HomographyStamped] Homography from rgb image to radar
                - ~imu:                   [sensor_msgs/Imu] IMU data, East-North-Up
            Publications:
                - ~image:                 [sensor_msgs/Image] Image which visualizes homography between rgb image and radar
        -->
        <node name="$(arg node_name)_vis" pkg="$(arg pkg_name)" type="homography_vis_node.py" required="false" output="screen">

            <!-- remap from=sink to=source -->
            <remap from="~imu" to="/imu/data/enu" />
            <remap from="~rgb" to="image_color/compressed" />
            <remap from="~radar" to="/radar/radar_1/image_raw" />
            <remap from="~rgb_radar" to="$(arg node_name)/rgb_radar" />
        </node>

    </group>
    
</launch>

