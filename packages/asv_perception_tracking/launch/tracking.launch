<?xml version="1.0" encoding="utf-8"?>
<launch>
    <arg name="pkg_name" value="asv_perception_tracking"/>
    <arg name="ns_name" default="tracking"/>

    <!-- sensor-specific trackers -->
    <include file="$(find asv_perception_tracking)/launch/camera0.launch" />
    <include file="$(find asv_perception_tracking)/launch/radar0.launch" />
    <include file="$(find asv_perception_tracking)/launch/radar1.launch" />

    <group ns="$(arg ns_name)">

        <!-- 
            tracked obstacle fusion
        -->
        <node name="fusion" pkg="$(arg pkg_name)" type="fusion.py" output="screen">
            
            <remap from="~0/input" to="/radar0/tracking/obstacles" />
            <remap from="~1/input" to="/radar1/tracking/obstacles" />
            <remap from="~2/input" to="/camera0/tracking/classified/obstacles" />

            <rosparam>
                n_subs: 3
                cost_fn: 'euclidean'
                cost_fn_max: 20
                _cost_fn: 'hellinger'
                _cost_fn_max: 0.99999
            </rosparam>
        </node>

        <!-- 
            fused obstacle visualization
        -->
        <node name="fusion_visualization" pkg="$(arg pkg_name)" type="visualization.py" output="screen">

            <remap from="~input" to="fusion/obstacles" />

            <rosparam>
                marker_duration_secs: 1.
            </rosparam>
        </node>

        <!-- 
            NMEA reporting node
        -->
        <!-- 
        <node name="nmea_reporting" pkg="$(arg pkg_name)" type="nmea_reporting.py" output="screen">

            <remap from="~input" to="fusion/obstacles" />
            
            <rosparam>
                convex_hull: True
                tf_frame: 'base_link'
            </rosparam>
        </node>
        -->

        <!-- 
            socket reporting sample
        -->
        <!--
        <node name="udp_reporting" pkg="$(arg pkg_name)" type="socket_reporting.py" output="screen">

            <remap from="~input" to="fusion/obstacles" />
            
            <rosparam>
                host_ip: '127.0.0.1'
                port: 5555
                proto:  'udp'
                tf_frame: 'base_link'
            </rosparam>
        </node>
        -->
    </group>
</launch>

